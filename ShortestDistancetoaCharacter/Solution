import java.util.LinkedList;
import java.util.Queue;

/*
  Given a string S and a character C,
  return an array of integers representing the shortest distance from the character C in the string.
 */

class Solution {

    public int[] shortestToChar(String S, char C) {
        int[] arr = new int[S.length()];
        Queue<Integer> indexOfC = new LinkedList<>();
        for(int i = 0; i < S.length(); i++) {
            if(S.charAt(i) == C) indexOfC.offer(i);
        }
        int temp = -1;
        while(!indexOfC.isEmpty()) {
            int lastIndex = indexOfC.peek();
            if(indexOfC.size() == 1) lastIndex = S.length() - 1;
            for (int i = temp + 1; i <= lastIndex; i++) {
                arr[i] = Math.abs(indexOfC.peek() - i);
                if(temp >= 0) {
                    arr[i] = Math.min(Math.abs(indexOfC.peek() - i),
                            Math.abs(temp - i));
                }
            }
            temp = indexOfC.poll();
        }
        return arr;
    }
    
}
