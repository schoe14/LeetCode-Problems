import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> levelList = new LinkedList<>();
        Queue<TreeNode> queue = new LinkedList<>();

        if(root == null) return levelList;

        queue.offer(root);
        while (!queue.isEmpty()) {
            int num = queue.size();
            List<Integer> temp = new LinkedList<>();
            for(int i = 0; i < num; i++) {
                if(queue.peek().left != null) queue.offer(queue.peek().left);
                if(queue.peek().right != null) queue.offer(queue.peek().right);
                temp.add(queue.poll().val);
            }
            levelList.add(temp);
        }
        return levelList;
    }
    
}
