import java.util.ArrayList;
import java.util.List;

/*
  Given a tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, 
  and every node has no left child and only 1 right child.
 */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
class Solution {

    public TreeNode increasingBST(TreeNode root) {
        List<Integer> inOrder = new ArrayList<>();
        helper(root, inOrder);
        TreeNode treeNode = new TreeNode(0), current = treeNode;
        for (int i : inOrder) {
            current.right = new TreeNode(i);
            current = current.right;
        }
        return treeNode.right;
    }

    public void helper(TreeNode root, List<Integer> inOrder) {
        if(root == null) return;
        helper(root.left, inOrder);
        inOrder.add(root.val);
        helper(root.right, inOrder);
    }
    
}
