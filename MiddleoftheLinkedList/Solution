import java.util.ArrayList;
import java.util.List;

/*
  Given a non-empty, singly linked list with head node head, 
  return a middle node of linked list.
  If there are two middle nodes, return the second middle node.
 */
 
 /**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
class Solution {

    public ListNode middleNode(ListNode head) {
        List<ListNode> list = new ArrayList<>();

        while(head.next != null) {
            list.add(head);
            head = head.next;
        }
        list.add(head);
        head = list.get(list.size() / 2);

        return head;
    }
    
}
